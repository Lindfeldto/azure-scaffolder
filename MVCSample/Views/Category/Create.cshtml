@model MVCSample.Models.Category
@using MVCSample.Views.Category

@{
	ViewBag.Title = string.Format(Resources.Category_Create_Title_Format, "Category");
}

<h2>@ViewBag.Title.</h2>
<div class="row">
    <section id="createForm">
        <form id="form">
			<div class="col-md-8">
                @Html.AntiForgeryToken()
                <h4>@string.Format(Resources.Category_Create_Form_Header_Format, "Category")</h4>
                <hr />
				<div class="alert alert-warning" data-bind="visible: error" style="visibility: hidden;"><strong>Warning! </strong><span data-bind="text: errorMessage"></span></div>
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
				@Html.HiddenFor(m => m.PublicId, new Dictionary<string, object>() { { "class", "form-control" }, { "data-bind", "value: PublicId" } })
						
				<div class="form-group">
					<div class="row">
						@Html.LabelFor(m => m.ModelGuid, new { @class = "col-md-3 control-label" })
						<div class="col-md-9">
							@Html.TextBoxFor(m => m.ModelGuid, new Dictionary<string, object>() { { "class", "form-control" }, { "data-bind", "value: ModelGuid" }, { "data-role", "datetimepicker" } })
							@Html.ValidationMessageFor(m => m.ModelGuid, "", new { @class = "text-danger" })
						</div>
					</div>
				</div>
				<div class="form-group">
					<div class="row">
						@Html.LabelFor(m => m.Name, new { @class = "col-md-3 control-label" })
						<div class="col-md-9">
							@Html.TextBoxFor(m => m.Name, new Dictionary<string, object>() { { "class", "form-control" }, { "data-bind", "value: Name" } })
							@Html.ValidationMessageFor(m => m.Name, "", new { @class = "text-danger" })
						</div>
					</div>
				</div>
				<div class="form-group">
					<div class="row">
						@Html.LabelFor(m => m.Description, new { @class = "col-md-3 control-label" })
						<div class="col-md-9">
							@Html.TextBoxFor(m => m.Description, new Dictionary<string, object>() { { "class", "form-control" }, { "data-bind", "value: Description" } })
							@Html.ValidationMessageFor(m => m.Description, "", new { @class = "text-danger" })
						</div>
					</div>
				</div>
				<div class="form-group">
					<div class="row">
						@Html.LabelFor(m => m.Order, new { @class = "col-md-3 control-label" })
						<div class="col-md-9">
							@Html.TextBoxFor(m => m.Order, new Dictionary<string, object>() { { "class", "form-control" }, { "data-bind", "value: Order" } })
							@Html.ValidationMessageFor(m => m.Order, "", new { @class = "text-danger" })
						</div>
					</div>
				</div>
				<div class="form-group">
					<div class="row">
						@Html.LabelFor(m => m.ParentCategoryPublicId, new { @class = "col-md-3 control-label" })
						<div class="col-md-9">
							@Html.TextBoxFor(m => m.ParentCategoryPublicId, new Dictionary<string, object>() { { "class", "form-control" }, { "data-bind", "value: ParentCategoryPublicId, source: CategoriesDataSource" }, { "data-role", "dropdownlist" }, { "data-auto-bind", "false" }, { "data-text-field", "Name" }, { "data-value-field", "PublicId" } })
							@Html.ValidationMessageFor(m => m.ParentCategoryPublicId, "", new { @class = "text-danger" })
						</div>
					</div>
				</div>
			</div>
            <div class="col-md-4">
                <h4>@Resources.Category_Create_Form_Options</h4>
                <hr />
                <div class="row form-group">
                    <div class="col-md-12">
                        <button data-bind="click: create" class="btn btn-default">@Resources.Category_Create_Save</button>
                    </div>
                </div>
            </div>
		</form>
	</section>
</div>

@section scripts{
	@Scripts.Render("~/bundles/jqueryval")
	@Scripts.Render("~/bundles/kendo")

	<script src="/Scripts/Data/Categories.js"></script>
	<script src="/Scripts/Data/Category.js"></script>

	<script type="text/javascript">

		$(document).ready( function() {

			CategoryData.Init("NOTSET");
			CategoryData.Load($("form"));
			
		});

	</script>
}
