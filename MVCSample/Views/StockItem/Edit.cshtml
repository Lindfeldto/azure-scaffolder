@model MVCSample.Models.StockItem
@using MVCSample.Views.StockItem

@{
	ViewBag.Title = string.Format(Resources.StockItem_Edit_Title_Format, "Stock Item");
}

<h2>@ViewBag.Title.</h2>
<div class="row">
    <section id="updateForm">
        <form id="form">
			<div class="col-md-8">
                @Html.AntiForgeryToken()
                <h4>@string.Format(Resources.StockItem_Edit_Form_Header_Format, "Stock Item")</h4>
                <hr />
				<div class="alert alert-warning" data-bind="visible: error" style="visibility: hidden;"><strong>Warning!</strong><span data-bind="text: errorMessage"></span></div>
				<div class="alert alert-info" data-bind="visible: loading"><strong>Loading </strong><span>your data...</span></div>
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
				@Html.HiddenFor(m => m.PublicId, new Dictionary<string, object>() { { "class", "form-control" }, { "data-bind", "value: PublicId" } })
				
				<div class="form-group" data-bind="visible: loading">
                    <div class="progress">
                        <div class="progress-bar progress-bar-striped active" role="progressbar" aria-valuenow="100" aria-valuemin="0" aria-valuemax="100" style="width: 100%">
                            <span class="sr-only">loading...</span>
                        </div>
                    </div>
                </div>
				
				<div class="form-group" data-bind="visible: loaded">
					<div class="row">
						@Html.LabelFor(m => m.StockKeepingUnit, new { @class = "col-md-3 control-label" })
						<div class="col-md-9">
							@Html.TextBoxFor(m => m.StockKeepingUnit, new Dictionary<string, object>() { { "class", "form-control" }, { "data-bind", "value: StockKeepingUnit" } })
							@Html.ValidationMessageFor(m => m.StockKeepingUnit, "", new { @class = "text-danger" })
						</div>
					</div>
				</div>
				<div class="form-group" data-bind="visible: loaded">
					<div class="row">
						@Html.LabelFor(m => m.Name, new { @class = "col-md-3 control-label" })
						<div class="col-md-9">
							@Html.TextBoxFor(m => m.Name, new Dictionary<string, object>() { { "class", "form-control" }, { "data-bind", "value: Name" } })
							@Html.ValidationMessageFor(m => m.Name, "", new { @class = "text-danger" })
						</div>
					</div>
				</div>
				<div class="form-group" data-bind="visible: loaded">
					<div class="row">
						@Html.LabelFor(m => m.Description, new { @class = "col-md-3 control-label" })
						<div class="col-md-9">
							@Html.TextBoxFor(m => m.Description, new Dictionary<string, object>() { { "class", "form-control" }, { "data-bind", "value: Description" } })
							@Html.ValidationMessageFor(m => m.Description, "", new { @class = "text-danger" })
						</div>
					</div>
				</div>
				<div class="form-group">
					<div class="row">
						@Html.LabelFor(m => m.CostPrice, new { @class = "col-md-3 control-label" })
						<div class="col-md-9">
							@Html.TextBoxFor(m => m.CostPrice, new Dictionary<string, object>() { { "class", "form-control" }, { "data-bind", "value: CostPrice" } })
							@Html.ValidationMessageFor(m => m.CostPrice, "", new { @class = "text-danger" })
						</div>
					</div>
				</div>
				<div class="form-group">
					<div class="row">
						@Html.LabelFor(m => m.ListPrice, new { @class = "col-md-3 control-label" })
						<div class="col-md-9">
							@Html.TextBoxFor(m => m.ListPrice, new Dictionary<string, object>() { { "class", "form-control" }, { "data-bind", "value: ListPrice" } })
							@Html.ValidationMessageFor(m => m.ListPrice, "", new { @class = "text-danger" })
						</div>
					</div>
				</div>
				<div class="form-group" data-bind="visible: loaded">
					<div class="row">
						@Html.LabelFor(m => m.Width, new { @class = "col-md-3 control-label" })
						<div class="col-md-9">
							@Html.TextBoxFor(m => m.Width, new Dictionary<string, object>() { { "class", "form-control" }, { "data-bind", "value: Width" } })
							@Html.ValidationMessageFor(m => m.Width, "", new { @class = "text-danger" })
						</div>
					</div>
				</div>
				<div class="form-group" data-bind="visible: loaded">
					<div class="row">
						@Html.LabelFor(m => m.Length, new { @class = "col-md-3 control-label" })
						<div class="col-md-9">
							@Html.TextBoxFor(m => m.Length, new Dictionary<string, object>() { { "class", "form-control" }, { "data-bind", "value: Length" } })
							@Html.ValidationMessageFor(m => m.Length, "", new { @class = "text-danger" })
						</div>
					</div>
				</div>
				<div class="form-group" data-bind="visible: loaded">
					<div class="row">
						@Html.LabelFor(m => m.Height, new { @class = "col-md-3 control-label" })
						<div class="col-md-9">
							@Html.TextBoxFor(m => m.Height, new Dictionary<string, object>() { { "class", "form-control" }, { "data-bind", "value: Height" } })
							@Html.ValidationMessageFor(m => m.Height, "", new { @class = "text-danger" })
						</div>
					</div>
				</div>
				<div class="form-group" data-bind="visible: loaded">
					<div class="row">
						@Html.LabelFor(m => m.DimensionUnitPublicId, new { @class = "col-md-3 control-label" })
						<div class="col-md-9">
							@Html.TextBoxFor(m => m.DimensionUnitPublicId, new Dictionary<string, object>() { { "class", "form-control" }, { "data-bind", "value: DimensionUnitPublicId, source: DimensionUnitsDataSource" }, { "data-role", "dropdownlist" }, { "data-auto-bind", "false" }, { "data-text-field", "Name" }, { "data-value-field", "PublicId" } })
							@Html.ValidationMessageFor(m => m.DimensionUnitPublicId, "", new { @class = "text-danger" })
						</div>
					</div>
				</div>
				<div class="form-group" data-bind="visible: loaded">
					<div class="row">
						@Html.LabelFor(m => m.Weight, new { @class = "col-md-3 control-label" })
						<div class="col-md-9">
							@Html.TextBoxFor(m => m.Weight, new Dictionary<string, object>() { { "class", "form-control" }, { "data-bind", "value: Weight" } })
							@Html.ValidationMessageFor(m => m.Weight, "", new { @class = "text-danger" })
						</div>
					</div>
				</div>
				<div class="form-group" data-bind="visible: loaded">
					<div class="row">
						@Html.LabelFor(m => m.WeightUnitPublicId, new { @class = "col-md-3 control-label" })
						<div class="col-md-9">
							@Html.TextBoxFor(m => m.WeightUnitPublicId, new Dictionary<string, object>() { { "class", "form-control" }, { "data-bind", "value: WeightUnitPublicId, source: WeightUnitsDataSource" }, { "data-role", "dropdownlist" }, { "data-auto-bind", "false" }, { "data-text-field", "Name" }, { "data-value-field", "PublicId" } })
							@Html.ValidationMessageFor(m => m.WeightUnitPublicId, "", new { @class = "text-danger" })
						</div>
					</div>
				</div>
				<div class="form-group" data-bind="visible: loaded">
					<div class="row">
						@Html.LabelFor(m => m.CategoryPublicId, new { @class = "col-md-3 control-label" })
						<div class="col-md-9">
							@Html.TextBoxFor(m => m.CategoryPublicId, new Dictionary<string, object>() { { "class", "form-control" }, { "data-bind", "value: CategoryPublicId, source: CategoriesDataSource" }, { "data-role", "dropdownlist" }, { "data-auto-bind", "false" }, { "data-text-field", "Name" }, { "data-value-field", "PublicId" } })
							@Html.ValidationMessageFor(m => m.CategoryPublicId, "", new { @class = "text-danger" })
						</div>
					</div>
				</div>
			</div>
            <div class="col-md-4">
                <h4>@Resources.StockItem_Edit_Form_Options</h4>
                <hr />
                <div class="row form-group">
                    <div class="col-md-12">
                        <button data-bind="click: update, enabled: loaded" class="btn btn-default">@Resources.StockItem_Edit_Save</button>
                    </div>
                </div>
            </div>
		</form>
	</section>
</div>

@section scripts{
	@Scripts.Render("~/bundles/jqueryval")
	@Scripts.Render("~/bundles/kendo")

	<script src="/Scripts/Data/DimensionUnits.js"></script>
	<script src="/Scripts/Data/WeightUnits.js"></script>
	<script src="/Scripts/Data/Categories.js"></script>
	<script src="/Scripts/Data/StockItem.js"></script>

	<script type="text/javascript">

		$(document).ready( function() {

			StockItemData.Init("@ViewBag.PublicId");

			StockItemData.Load($("form"));

		});

	</script>
}
