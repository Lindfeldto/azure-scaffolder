<#@ Template Language="C#" HostSpecific="True"  #><#@ Output Extension="cshtml" #><#@ include file="..\Imports.include.t4" #><# var viewDataType = (EnvDTE.CodeType) ViewDataType; #><# var fullModelName = Namespace+"."+ViewDataTypeName; #>
@model <#= fullModelName #>
@using <#= ResourceNamespace #>

@{
	ViewBag.Title = string.Format(Resources.<#= ViewDataTypeName #>_Create_Title_Format, "<#= SpacedModelName #>");
}

<h2>@ViewBag.Title.</h2>
<div class="row">
    <section id="createForm">
        <form id="form">
			<div class="col-md-8">
                @Html.AntiForgeryToken()
                <h4>@string.Format(Resources.<#= ViewDataTypeName #>_Create_Form_Header_Format, "<#= SpacedModelName #>")</h4>
                <hr />
				<div class="alert alert-warning" data-bind="visible: error" style="visibility: hidden;"><strong>Warning!</strong><span data-bind="text: errorMessage"></span></div>
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
				@Html.HiddenFor(m => m.PublicId, new Dictionary<string, object>() { { "class", "form-control" }, { "data-bind", "value: PublicId" } })

<#				foreach (var property in ScaffoldProperties) { 
					if ((property.Value == typeof(System.String).FullName) || (property.Value == typeof(System.Int32).FullName))
					{
						if (!RelatedProperties.ContainsKey(property.Key))
                        {
#>
				<div class="form-group">
					<div class="row">
						@Html.LabelFor(m => m.<#= property.Key #>, new { @class = "col-md-3 control-label" })
						<div class="col-md-9">
							@Html.TextBoxFor(m => m.<#= property.Key #>, new Dictionary<string, object>() { { "class", "form-control" }, { "data-bind", "value: <#= property.Key #>" } })
							@Html.ValidationMessageFor(m => m.<#= property.Key #>, "", new { @class = "text-danger" })
						</div>
					</div>
				</div>
<#
                        }
						else {
#>
				<div class="form-group">
					<div class="row">
						@Html.LabelFor(m => m.<#= property.Key #>, new { @class = "col-md-3 control-label" })
						<div class="col-md-9">
							@Html.TextBoxFor(m => m.<#= property.Key #>, new Dictionary<string, object>() { { "class", "form-control" }, { "data-bind", "value: <#= property.Key #>, source: <#= RelatedDataSources[property.Key] #>DataSource" }, { "data-role", "dropdownlist" }, { "data-auto-bind", "false" }, { "data-text-field", "Name" }, { "data-value-field", "PublicId" } })
							@Html.ValidationMessageFor(m => m.<#= property.Key #>, "", new { @class = "text-danger" })
						</div>
					</div>
				</div>
<#
                        }
					}
					else if (property.Value == typeof(System.Boolean).FullName)
					{
#>				
				<div class="form-group">
					<div class="row">
						@Html.LabelFor(m => m.<#= property.Key #>, new { @class = "col-md-3 control-label" })
						<div class="col-md-9">
							@Html.CheckBoxFor(m => m.<#= property.Key #>, new Dictionary<string, object>() { { "class", "form-control" }, { "data-bind", "checked: <#= property.Key #>" } })
							@Html.ValidationMessageFor(m => m.<#= property.Key #>, "", new { @class = "text-danger" })
						</div>
					</div>
				</div>
<#
					}
					else {
#>				<div class="form-group">
					<div class="row">
						@Html.LabelFor(m => m.<#= property.Key #>, new { @class = "col-md-3 control-label" })
						<div class="col-md-9">
							@Html.TextBoxFor(m => m.<#= property.Key #>, new Dictionary<string, object>() { { "class", "form-control" }, { "data-bind", "value: <#= property.Key #>" }, { "data-role", "datetimepicker" } })
							@Html.ValidationMessageFor(m => m.<#= property.Key #>, "", new { @class = "text-danger" })
						</div>
					</div>
				</div>
<#
					}
                } 
#>
			</div>
            <div class="col-md-4">
                <h4>@Resources.<#= ViewDataTypeName #>_Create_Form_Options</h4>
                <hr />
                <div class="row form-group">
                    <div class="col-md-12">
                        <button data-bind="click: create" class="btn btn-default">@Resources.<#= ViewDataTypeName #>_Create_Save</button>
                    </div>
                </div>
            </div>
		</form>
	</section>
</div>

@section scripts{
	@Scripts.Render("~/bundles/jqueryval")
	@Scripts.Render("~/bundles/kendo")

<#
	var standardTypes = new List<string>() { typeof(System.String).FullName, typeof(System.Boolean).FullName, typeof(System.Int32).FullName };
	var dateTimePickerTypes = new List<string>() { typeof(System.DateTime).FullName };
#>
<# 
	foreach (var property in ScaffoldProperties) {
		if (RelatedProperties.ContainsKey(property.Key)) {
#>
	<script src="/Scripts/Data/<#= RelatedPropertyTypes[property.Key] #>.js"></script>
<# 
        }
    }
#>
	<script src="/Scripts/Data/<#= ViewDataTypeName #>.js"></script>

	<script type="text/javascript">

		$(document).ready( function() {

			<#= ViewDataTypeName #>Data.Init("NOTSET", $("form"));
			
		});

	</script>
}
<#@ include file="..\ModelMetadataFunctions.cs.include.t4" #>