<#@ Template Language="C#" HostSpecific="True"  #><#@ Output Extension="js" #><#@ include file="..\Imports.include.t4" #><# var viewDataType = (EnvDTE.CodeType) ViewDataType; #><# var fullModelName = Namespace+"."+ViewDataTypeName; #>
/* *************************************** */
/* <#= ViewDataTypeName #> api data access */
/* *************************************** */

var <#= ViewDataTypeName #>Data = <#= ViewDataTypeName #>Data || (function(){
    
<#
	var standardTypes = new List<string>() { typeof(System.String).FullName, typeof(System.Boolean).FullName, typeof(System.Int32).FullName };
	var dateTimePickerTypes = new List<string>() { typeof(System.DateTime).FullName };
#>

	return {
		PublicId: 'NOTSET',
		Delete: function(e) {

			var that = this;

			e.preventDefault();

            $.ajax({
                url: '/api/<#= ViewDataTypeName #>/' + that.PublicId,
                type: 'DELETE',
                dataType: 'json',
                success: function(data) {

                    window.location.href = '/<#= ViewDataTypeName #>/';

                },
                error: function(error) {

                    that.LogError(error);

                }
            });

		},
		Update: function(e) {

			var that = this;

		    e.preventDefault();

			$.ajax({
				url: '/api/<#= ViewDataTypeName #>/' + that.PublicId,
				type: 'PUT',
				dataType: 'json',
				data: {
<#	
	foreach (var property in ScaffoldProperties) { 
		if ((property.Value == typeof(System.DateTime).FullName))
		{
#>
					<#= property.Key #>: kendo.toString(this.<#= property.Key #>, 'F'),
<#				}
		else {
#>
					<#= property.Key #>: that.<#= property.Key #>,
<#
        }	
	} 
#>
					PublicId: this.PublicId
				},
				success: function(data) {

					window.location.href = '/<#= ViewDataTypeName #>/Edit/' + that.PublicId;

				},
				error: function(error) {

					that.LogError(error);

				}
			});

		},
		Create: function(e) {

			var that = this;

			e.preventDefault();

			$.ajax({
				url: '/api/<#= ViewDataTypeName #>',
				type: 'POST',
				dataType: 'json',
				data: {
<#	
	foreach (var property in ScaffoldProperties) { 
		if ((property.Value == typeof(System.DateTime).FullName))
		{
#>
					<#= property.Key #>: kendo.toString(that.<#= property.Key #>, 'F'),
<#				}
		else {
#>
					<#= property.Key #>: that.<#= property.Key #>,
<#
        }	
	} 
#>
					PublicId: that.PublicId
				},
				success: function(data) {

					window.location.href = '/<#= ViewDataTypeName #>/Details/' + data;

				},
				error: function(error) {

					that.LogError(error);

				}
			});

		},
		Load: function (form) {

			var that = this;

			that.ViewModel.loading = true;
			that.ViewModel.loaded = false;

			that.Bind(form);

			$.ajax({
				url: '/api/<#= ViewDataTypeName #>/' + that.PublicId,
				type: 'GET',
				dataType: 'json',
				success: function (data) {

					that.LoadEntity(data, form);

				},
				error: function (error) {

					that.LogError(error);

				}
			});

		},
		LoadEntity: function(data, form){

			var that = this;
<#	
	foreach (var property in ScaffoldProperties) { 
#>
			that.ViewModel.<#= property.Key #> = data.<#= property.Key #>;
<#
	} 
#>
			that.ViewModel.PublicId = data.PublicId;

<#	
foreach (var property in ScaffoldProperties) { 
#>
<#
if (RelatedProperties.ContainsKey(property.Key)) {
#>
			$.ajax({
				url: '/api/<#= RelatedPropertyTypes[property.Key] #>/' + that.ViewModel.<#= property.Key #>,
				type: 'GET',
				dataType: 'json',
				success: function (data) {

					that.ViewModel.<#= property.Key #>_Display = data.Name;

				},
				error: function (error) {

					that.ViewModel.<#= property.Key #>_Display = 'error reading data';

					console.log(error);
					    
				}
			}).done(function (data) {

		        that.Bind(form);

		    });
<#
}
} 
#>

			that.ViewModel.loading = false;
			that.ViewModel.loaded = true;

			that.Bind(form);

		},
		ViewModel: kendo.observable({
			PublicId: '',
<# 
foreach (var property in ScaffoldProperties) {
	if (RelatedProperties.ContainsKey(property.Key)) {
#>
			<#= RelatedDataSources[property.Key] #>DataSource: null,
<# 
    }
}
#>		
<#	
foreach (var property in ScaffoldProperties) { 
#>
			<#= property.Key #>: '',
<#
if (RelatedProperties.ContainsKey(property.Key)) {
#>
			<#= property.Key #>_Display: 'loading...',
<#
}
} 
#>
			hasChanges: false,
			saving: false,
			saved: false,
			creating: false,
			created: false,
			deleting: false,
			deleted: false,
			loading: true,
			loaded: false,
			error: false,
			errorMessage: '',
			update: undefined,
			delete: undefined,
			create: undefined
				
		}),
		Bind: function(form) {

		    kendo.bind(form, this.ViewModel);

		},
		LogError: function(error) {

			var that = this;
			
			that.ViewModel.error = true;
			that.ViewModel.errorMessage = error.responseJSON.ExceptionMessage;

			console.log(error);

		},
		Init: function(publicId) {
			
			var that = this;

		    that.PublicId = publicId;

			that.ViewModel.PublicId = publicId;

<# 
	foreach (var property in ScaffoldProperties) {
		if (RelatedProperties.ContainsKey(property.Key)) {
#>
			that.ViewModel.<#= RelatedDataSources[property.Key] #>DataSource = <#= RelatedDataSources[property.Key] #>Data.<#= RelatedDataSources[property.Key] #>DataSource;
<# 
        }
    }
	foreach (var property in ScaffoldProperties) { 
#>
			that.ViewModel.<#= property.Key #> = '';
<#
		if (RelatedProperties.ContainsKey(property.Key)) {
#>
			that.ViewModel.<#= property.Key #>_Display = 'loading...';
<#
		}
	} 
#>
				
			that.ViewModel.update = that.Update;
			that.ViewModel.delete = that.Delete;
			that.ViewModel.create = that.Create;
		}
	};
}());
<#@ include file="..\ModelMetadataFunctions.cs.include.t4" #>